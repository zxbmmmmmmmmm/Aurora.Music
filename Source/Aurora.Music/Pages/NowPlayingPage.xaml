<!--
Copyright (c) Aurora Studio. All rights reserved.

Licensed under the MIT License. See LICENSE in the project root for license information.
-->
<Page
    x:Class="Aurora.Music.Pages.NowPlayingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:audio="using:AudioVisualizer"
    xmlns:controls="using:Aurora.Music.Controls"
    xmlns:list="using:Aurora.Music.Controls.ListItems"
    xmlns:vm="using:Aurora.Music.ViewModels"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:star="using:StarButton"
    Unloaded="Page_Unloaded"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <controls:BindedTemplates/>
                <ResourceDictionary Source="../Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light" Source="../Themes/Light.xaml"/>
                <ResourceDictionary x:Key="Dark" Source="../Themes/Dark.xaml"/>
            </ResourceDictionary.ThemeDictionaries>
            <controls:SliderToolTipConverter x:Key="SliderToolTipConverter"/>

            <Style TargetType="ListViewItem" x:Key="LyricListItem">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                        x:Name="Root" HorizontalAlignment="Stretch"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="0" Margin="0" Background="{x:Null}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="{x:Null}"
                        CheckBoxBrush="{x:Null}"
                        DragBackground="{x:Null}"
                        DragForeground="{ThemeResource ListViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                        PlaceholderBackground="{x:Null}"
                        PointerOverBackground="{x:Null}"
                        PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                        SelectedBackground="{x:Null}"
                        SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{x:Null}"
                        PressedBackground="{x:Null}"
                        SelectedPressedBackground="{x:Null}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource ListViewItemCheckMode}">
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LyricListView" TargetType="ListView">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="TabNavigation" Value="Once"/>
                <Setter Property="IsSwipeEnabled" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True"/>
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="ItemContainerTransitions">
                    <Setter.Value>
                        <TransitionCollection>
                            <AddDeleteThemeTransition/>
                            <ContentThemeTransition/>
                            <ReorderThemeTransition/>
                            <EntranceThemeTransition IsStaggeringEnabled="False"/>
                            <RepositionThemeTransition IsStaggeringEnabled="False"/>
                        </TransitionCollection>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" 
                                      BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" 
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled">
                                    <ItemsPresenter Footer="{TemplateBinding Footer}" FooterTransitions="{TemplateBinding FooterTransitions}" FooterTemplate="{TemplateBinding FooterTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" HeaderTemplate="{TemplateBinding HeaderTemplate}" Padding="{TemplateBinding Padding}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Page.DataContext>
        <vm:NowPlayingPageViewModel x:Name="Context"/>
    </Page.DataContext>

    <Grid x:Name="Root" Padding="32,80,32,0" Background="{ThemeResource SystemControlAltTranslucentAcrylicWindowBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongPanel.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcView.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcView.(Grid.Column)" Value="1"/>
                        <Setter Target="LrcView.(Grid.Row)" Value="0"/>
                        <Setter Target="LrcViewOverlay.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcViewOverlay.(Grid.Column)" Value="1"/>
                        <Setter Target="LrcViewOverlay.(Grid.Row)" Value="0"/>

                        <Setter Target="NarrowLrcBtn.Visibility" Value="Collapsed"/>
                        <Setter Target="Volume.Visibility" Value="Collapsed"/>
                        <Setter Target="VolumeSlider.Visibility" Value="Visible"/>
                        <Setter Target="NarrowSmallWindow.Visibility" Value="Collapsed"/>
                        <Setter Target="NarrowSplit.Visibility" Value="Collapsed"/>
                        <Setter Target="LrcBtn.Visibility" Value="Visible"/>
                        <Setter Target="SmallWindow.Visibility" Value="Visible"/>
                        <Setter Target="Stop.Visibility" Value="Visible"/>
                        <Setter Target="PlayListNarrow.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListFull.Visibility" Value="Visible"/>

                        <Setter Target="VisualizationMenu.Visibility" Value="Collapsed"/>
                        <Setter Target="VisualizationBtn.Visibility" Value="Visible"/>

                        <Setter Target="RepeatFlyout.Visibility" Value="Collapsed"/>
                        <Setter Target="Repeat.Visibility" Value="Visible"/>

                        <Setter Target="ShuffleFlyout.Visibility" Value="Collapsed"/>
                        <Setter Target="Shuffle.Visibility" Value="Visible"/>

                        <Setter Target="RowOne.Height" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LrcHeader.FontSize" Value="18"/>

                        <Setter Target="SongPanel.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcView.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcView.(Grid.Column)" Value="1"/>
                        <Setter Target="LrcView.(Grid.Row)" Value="0"/>
                        <Setter Target="LrcViewOverlay.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="LrcViewOverlay.(Grid.Column)" Value="1"/>
                        <Setter Target="LrcViewOverlay.(Grid.Row)" Value="0"/>

                        <Setter Target="LrcBtn.Visibility" Value="Collapsed"/>
                        <Setter Target="SmallWindow.Visibility" Value="Collapsed"/>
                        <Setter Target="Stop.Visibility" Value="Visible"/>
                        <Setter Target="PlayListNarrow.Visibility" Value="Collapsed"/>
                        <Setter Target="PlayListFull.Visibility" Value="Visible"/>
                        <Setter Target="NarrowLrcBtn.Visibility" Value="Visible"/>
                        <Setter Target="NarrowSmallWindow.Visibility" Value="Visible"/>
                        <Setter Target="NarrowSplit.Visibility" Value="Visible"/>

                        <Setter Target="VisualizationMenu.Visibility" Value="Collapsed"/>
                        <Setter Target="VisualizationBtn.Visibility" Value="Visible"/>

                        <Setter Target="RepeatFlyout.Visibility" Value="Collapsed"/>
                        <Setter Target="Repeat.Visibility" Value="Visible"/>

                        <Setter Target="ShuffleFlyout.Visibility" Value="Collapsed"/>
                        <Setter Target="Shuffle.Visibility" Value="Visible"/>

                        <Setter Target="LrcView.Margin" Value="16,16,16,64"/>
                        <Setter Target="LrcViewOverlay.Margin" Value="16,16,16,64"/>
                        <Setter Target="RowOne.Height" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LrcHeader.FontSize" Value="16"/>

                        <Setter Target="Previous.Margin" Value="2,4"/>
                        <Setter Target="PlayPause.Margin" Value="2,4"/>
                        <Setter Target="Next.Margin" Value="2,4"/>
                        <Setter Target="Shuffle.Margin" Value="2,4"/>
                        <Setter Target="Repeat.Margin" Value="2,4"/>
                        <Setter Target="LrcBtn.Margin" Value="2,4"/>
                        <Setter Target="SmallWindow.Margin" Value="2,4"/>
                        <Setter Target="More.Margin" Value="2,4"/>
                        <Setter Target="SpeedBtn.Margin" Value="2,4"/>
                        <Setter Target="VisualizationBtn.Margin" Value="2,4"/>
                        <Setter Target="Volume.Margin" Value="2,4"/>

                        <Setter Target="SongPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="LrcView.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="LrcView.(Grid.Column)" Value="0"/>
                        <Setter Target="LrcView.(Grid.Row)" Value="1"/>
                        <Setter Target="LrcViewOverlay.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="LrcViewOverlay.(Grid.Column)" Value="0"/>
                        <Setter Target="LrcViewOverlay.(Grid.Row)" Value="1"/>

                        <Setter Target="LrcBtn.Visibility" Value="Collapsed"/>
                        <Setter Target="SmallWindow.Visibility" Value="Collapsed"/>

                        <Setter Target="Stop.Visibility" Value="Collapsed"/>

                        <Setter Target="PlayListNarrow.Visibility" Value="Visible"/>
                        <Setter Target="PlayListFull.Visibility" Value="Collapsed"/>

                        <Setter Target="NarrowLrcBtn.Visibility" Value="Visible"/>
                        <Setter Target="NarrowSmallWindow.Visibility" Value="Visible"/>

                        <Setter Target="VisualizationMenu.Visibility" Value="Visible"/>
                        <Setter Target="VisualizationBtn.Visibility" Value="Collapsed"/>

                        <Setter Target="RepeatFlyout.Visibility" Value="Visible"/>
                        <Setter Target="Repeat.Visibility" Value="Collapsed"/>

                        <Setter Target="ShuffleFlyout.Visibility" Value="Visible"/>
                        <Setter Target="Shuffle.Visibility" Value="Collapsed"/>

                        <Setter Target="NarrowSplit.Visibility" Value="Visible"/>

                        <Setter Target="PlayListBtn.Width" Value="48"/>
                        <Setter Target="PlayListBtn.Height" Value="48"/>
                        <Setter Target="PlayListBtn.Style" Value="{ThemeResource RevealRoundButton}"/>

                        <Setter Target="LrcView.Margin" Value="12"/>
                        <Setter Target="LrcViewOverlay.Margin" Value="12"/>
                        <Setter Target="RowOne.Height" Value="72"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="120"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition x:Name="RowOne" Height="60"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="SongPanel" Margin="12,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <audio:CustomVisualizer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                    Loaded="CustomVisualizer_Loaded" Visibility="{x:Bind Context.IsVisualizing,Mode=OneWay}"
                                    CreateResources="CustomVisualizer_CreateResources"
                                    x:Name="Visualizer" Draw="CustomVisualizer_Draw">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.64"/>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation From="1" To="0" Duration="0:0:0.64"/>
                </animations:Implicit.HideAnimations>
            </audio:CustomVisualizer>
            <Image Margin="0,12" x:Name="Artwork" 
                   Visibility="{x:Bind Context.BoolNottoVisibility(Context.IsVisualizing),Mode=OneWay}"
                   Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                   Source="{x:Bind Context.CurrentArtwork,Mode=OneWay, TargetNullValue='ms-appx:///Assets/Images/now_placeholder.png', FallbackValue='ms-appx:///Assets/Images/now_placeholder.png'}" 
                   ImageOpened="Artwork_ImageOpened">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.64"/>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation From="1" To="0" Duration="0:0:0.64"/>
                </animations:Implicit.HideAnimations>
            </Image>
            <Border Margin="0,12" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                    Background="{ThemeResource ImageDarkOverlay}" Visibility="{x:Bind Context.NightModeEnabled}"
                    Height="{Binding ActualHeight, ElementName=Artwork}" Width="{Binding ActualWidth, ElementName=Artwork}"/>
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.Row="1">
                <Button HorizontalAlignment="Left" VerticalAlignment="Center" 
                        Style="{ThemeResource TextBlockButtonStyle}" Click="ClickArtistViewDialog"
                        Margin="0,4,0,0" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush), Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Bind Context.Song.GetFormattedArtists(),Mode=OneWay}">
                    <TextBlock TextTrimming="CharacterEllipsis" 
                               TextWrapping="NoWrap" 
                               MaxLines="1" 
                               Text="{x:Bind Context.Song.GetFormattedArtists(),Mode=OneWay}"/>
                </Button>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock x:Name="Title" Margin="0,2,0,0" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" MaxLines="1"
                               Style="{ThemeResource TitleTextBlockStyle}" FontWeight="Bold" ToolTipService.ToolTip="{x:Bind Context.Song.Title,Mode=OneWay}"
                               Text="{x:Bind Context.Song.Title,Mode=OneWay}"/>
                    <FontIcon Visibility="{x:Bind Context.Song.IsOnline,Mode=OneWay}"
                              FontSize="24"
                              VerticalAlignment="Center" Margin="8,4,0,0" FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind Context.GlyphOfOnline(Context.Song),Mode=OneWay}" />
                </StackPanel>
                <Button Margin="0,4,0,0" 
                        HorizontalAlignment="Left" VerticalAlignment="Center" 
                        x:Name="Album" Click="OpenAlbumViewDialog"
                        ToolTipService.ToolTip="{x:Bind Context.Song.Album,Mode=OneWay}"
                        Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush), Mode=OneWay}"
                        Style="{ThemeResource TextBlockButtonStyle}">
                    <TextBlock Text="{x:Bind Context.Song.Album,Mode=OneWay}"
                               TextTrimming="CharacterEllipsis" 
                               TextWrapping="NoWrap" MaxLines="1"/>
                </Button>
                <toolkit:DropShadowPanel Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Color="{ThemeResource SystemAltHighColor}" ShadowOpacity="0.66" BlurRadius="8" OffsetX="0" OffsetY="0">
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" ToolTipService.ToolTip="{x:Bind Context.Song.GetAddtionalDesc(),Mode=OneWay}"
                               Text="{x:Bind Context.Song.GetAddtionalDesc(),Mode=OneWay}" Foreground="{ThemeResource SystemControlBackgroundBaseHighRevealBorderBrush}" 
                               TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" MaxLines="1"/>
                </toolkit:DropShadowPanel>
                <StackPanel Visibility="{x:Bind Context.BoolNottoVisibility(Context.Song.IsPodcast),Mode=OneWay}" Margin="0,12,0,0" Orientation="Horizontal">
                    <RatingControl Value="{x:Bind Context.CurrentRating,Mode=OneWay}" ValueChanged="RatingControl_ValueChanged" IsClearEnabled="True" VerticalAlignment="Center" IsReadOnly="False"/>
                    <star:StarButton IsThreeState="False" IsChecked="{x:Bind Context.IsCurrentFavorite, Mode=TwoWay}" Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                        Foreground="#ff4343" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Margin="8,4,8,8"/>
                </StackPanel>
            </StackPanel>
        </Grid>
        <ListView x:Name="LrcView" Style="{ThemeResource LyricListView}" Grid.Row="1" Grid.ColumnSpan="2" IsItemClickEnabled="False"
                  HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="32,32,32,64"
                  IsSynchronizedWithCurrentItem="False" SelectionChanged="ListView_SelectionChanged"
                  SelectedIndex="{x:Bind Context.Lyric.CurrentIndex,Mode=OneWay}"
                  ItemContainerStyle="{ThemeResource LyricListItem}" ItemsSource="{x:Bind Context.Lyric.Contents,Mode=OneWay}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:LrcContent">
                    <list:LyricItem Data="{x:Bind }"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Header>
                <Grid x:Name="LrcHeaderGrid" Loaded="LrcHeader_Loaded">
                    <toolkit:DropShadowPanel Visibility="{x:Bind Context.BoolNottoVisibility(Context.Lyric.HasLyric),Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Color="{ThemeResource SystemAltHighColor}" ShadowOpacity="0.66" BlurRadius="4" OffsetX="0" OffsetY="0">
                        <TextBlock FontSize="18" x:Name="LrcHeader" Text="{x:Bind Context.LyricHint,Mode=OneWay}"
                               Style="{ThemeResource SubtitleTextBlockStyle}"/>
                    </toolkit:DropShadowPanel>
                </Grid>
            </ListView.Header>
            <ListView.Footer>
                <Grid Height="1600">
                </Grid>
            </ListView.Footer>
        </ListView>
        <Grid x:Name="LrcViewOverlay" Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="32,32,32,64">
            <Button Style="{ThemeResource RevealRectangleButton}" BorderThickness="0" Command="{x:Bind Context.OpenLyricEditorCommand}" Width="32" Height="32" HorizontalAlignment="Right" VerticalAlignment="Top">
                <FontIcon FontSize="16" FontFamily="Segoe MDL2 Assets" Glyph="&#xE104;" />
            </Button>
        </Grid>
        <Grid Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Margin="12,0,12,12" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <ProgressBar Grid.Column="1" Style="{ThemeResource SlimProgressBar}" Height="2" Foreground="{ThemeResource SystemControlBackgroundBaseLowRevealBorderBrush}" Background="{x:Null}" Value="{x:Bind Context.BufferProgress, Mode=OneWay}" HorizontalAlignment="Stretch" Margin="16,2,16,0"/>
            <Slider Grid.Column="1" Minimum="0" Maximum="100" 
                    Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" 
                    ThumbToolTipValueConverter="{StaticResource SliderToolTipConverter}"
                    BorderBrush="{ThemeResource SystemControlAltTranslucentAcrylicWindowBrush}" 
                    Value="{x:Bind Context.PositionToValue(Context.CurrentPosition, Context.TotalDuration), Mode=OneWay}" 
                    ValueChanged="Slider_ValueChanged" HorizontalAlignment="Stretch" Margin="4,8,4,0" VerticalAlignment="Center" 
                    Style="{ThemeResource RoundSlider}"/>
            <toolkit:DropShadowPanel HorizontalAlignment="Center" VerticalAlignment="Center" Color="{ThemeResource SystemAltHighColor}" BlurRadius="8" OffsetX="0" OffsetY="0" ShadowOpacity="0.66">
                <TextBlock Text="{x:Bind Context.TimeSpanFormat(Context.CurrentPosition),Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" Foreground="{ThemeResource SystemControlBackgroundBaseHighRevealBorderBrush}"/>
            </toolkit:DropShadowPanel>
            <toolkit:DropShadowPanel Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Color="{ThemeResource SystemAltHighColor}" BlurRadius="8" OffsetX="0" OffsetY="0" ShadowOpacity="0.66">
                <TextBlock Text="{x:Bind Context.TimeSpanFormat(Context.TotalDuration),Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" Foreground="{ThemeResource SystemControlBackgroundBaseHighRevealBorderBrush}"/>
            </toolkit:DropShadowPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="4" HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.ColumnSpan="2">
                <Button AccessKey="[" x:Uid="Previous" x:Name="Previous" Style="{ThemeResource RevealRoundButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" Command="{x:Bind Context.GoPrevious}" ToolTipService.ToolTip="Previous"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind Context.GlyphPreOfOnline(Context.Song),Mode=OneWay}" />
                    </Button.Content>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F1" />
                    </Button.KeyboardAccelerators>
                </Button>
                <Button AccessKey="P" x:Name="PlayPause" Style="{ThemeResource RevealRoundButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" Command="{x:Bind Context.PlayPause}" ToolTipService.ToolTip="{x:Bind Context.NullableBoolToString(Context.IsPlaying), Mode=OneWay}"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <SymbolIcon Symbol="{x:Bind Context.NullableBoolToSymbol(Context.IsPlaying), Mode=OneWay}"/>
                    </Button.Content>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="P" />
                        <KeyboardAccelerator Key="F2" />
                    </Button.KeyboardAccelerators>
                </Button>
                <Button AccessKey="]" x:Uid="Next" x:Name="Next" Style="{ThemeResource RevealRoundButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" Command="{x:Bind Context.GoNext}" ToolTipService.ToolTip="Next"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE101;" />
                    </Button.Content>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F3" />
                    </Button.KeyboardAccelerators>
                </Button>
                <Button AccessKey="E" x:Uid="Stop" x:Name="Stop" Style="{ThemeResource RevealRoundButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" Command="{x:Bind Context.Stop}" ToolTipService.ToolTip="Stop"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <SymbolIcon Symbol="Stop"/>
                    </Button.Content>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="E" />
                        <KeyboardAccelerator Key="F4" />
                    </Button.KeyboardAccelerators>
                </Button>
                <Button Style="{ThemeResource RevealRoundButton}" Width="48" Height="48" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}"
                        x:Name="VisualizationBtn" x:Uid="VisualizationButton" ToolTipService.ToolTip="Audio Visualization" Command="{x:Bind Context.ToggleVisualizing}">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE9D9;" />
                    </Button.Content>
                </Button>
                <Button x:Name="Volume" Style="{ThemeResource RevealRoundButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}"
                        x:Uid="VolumeButton" ToolTipService.ToolTip="Volume" Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind Context.VolumeToSymbol(Context.Volume), Mode=OneWay}" />
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout FlyoutPresenterStyle="{ThemeResource HoriNoScrollFlyoutPresenter}">
                            <StackPanel Padding="4,4,4,-4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Orientation="Horizontal">
                                <Slider Style="{ThemeResource RoundSlider}"
                                        BorderBrush="{ThemeResource SystemControlAltTranslucentAcrylicWindowBrush}" 
                                        IsThumbToolTipEnabled="False" MinWidth="240" 
                                        HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                        Minimum="0" Maximum="100" StepFrequency="1" 
                                        Value="{x:Bind Context.Volume, Mode=TwoWay}"/>
                                <TextBlock Margin="4,0,0,10" Width="36" TextAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="None" MaxLines="1" HorizontalAlignment="Stretch" Text="{x:Bind Context.VolumeToString(Context.Volume), Mode=OneWay}"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <ToggleButton x:Uid="Shuffle" x:Name="Shuffle" Style="{ThemeResource RevealRoundToggleButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" IsChecked="{x:Bind Context.IsShuffle, Mode=TwoWay}"
                              ToolTipService.ToolTip="Shuffle" Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <ToggleButton.Content>
                        <SymbolIcon Symbol="Shuffle"/>
                    </ToggleButton.Content>
                </ToggleButton>

                <ToggleButton x:Uid="Loop" x:Name="Repeat" Style="{ThemeResource RevealRoundToggleButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" IsChecked="{x:Bind Context.IsLoop, Mode=TwoWay}"
                              ToolTipService.ToolTip="Repeat" Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <ToggleButton.Content>
                        <SymbolIcon Symbol="Refresh"/>
                    </ToggleButton.Content>
                </ToggleButton>

                <Button AccessKey="L" x:Uid="PlayList" x:Name="PlayListBtn" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" Style="{ThemeResource RevealRectangleButton}" ToolTipService.ToolTip="Playing list" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button.Content>
                        <Grid>
                            <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="PlayListFull" Text="{x:Bind Context.NowListPreview,Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" Margin="12,8"/>
                            <FontIcon x:Name="PlayListNarrow" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontFamily="Segoe MDL2 Assets" Glyph="&#xE12F;" />
                        </Grid>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout FlyoutPresenterStyle="{ThemeResource HoriNoScrollFlyoutPresenter}" Opened="Flyout_Opened">
                            <ListView x:Name="NowPlayingFlyout" ItemTemplate="{StaticResource PlayingListTemplate}" 
                                      MaxHeight="360" IsSynchronizedWithCurrentItem="False" Padding="0" Margin="0"
                                      SelectedIndex="{x:Bind Context.CurrentIndex, Mode=OneWay,FallbackValue=-1}"
                                      ItemsSource="{x:Bind Context.NowPlayingList}" 
                                      ItemClick="NowPlayingFlyout_ItemClick"
                                      IsItemClickEnabled="True"
                                      ItemContainerStyleSelector="{StaticResource SongListStyleSelector}">
                                <ListView.Header>
                                    <TextBlock Text="Not Playing" HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="NotPlaying"
                                               Visibility="{x:Bind Context.CollapseIfNotZero(Context.NowPlayingList.Count),Mode=OneWay}" 
                                               Style="{ThemeResource SubtitleTextBlockStyle}" Margin="36,12"/>
                                </ListView.Header>
                            </ListView>
                        </Flyout>
                    </Button.Flyout>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="L" />
                    </Button.KeyboardAccelerators>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4">
                <StackPanel Orientation="Horizontal" x:Name="VolumeSlider" Visibility="Collapsed" Margin="4">
                    <Button Style="{ThemeResource TextBlockButtonStyle}" Command="{x:Bind Context.ToggleSilenceCommand}"
                            Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" >
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="22"
                                  Glyph="{x:Bind Context.VolumeToSymbol(Context.Volume), Mode=OneWay}"/>
                    </Button>
                    <Slider Style="{ThemeResource RoundSlider}" Margin="0,6,0,0" 
                            Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}"
                            BorderBrush="{ThemeResource SystemControlAltTranslucentAcrylicWindowBrush}" 
                            Width="180" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                            Minimum="0" Maximum="100" StepFrequency="1" Value="{x:Bind Context.Volume, Mode=TwoWay}"/>
                </StackPanel>
                <Button x:Uid="LyricWindow" IsEnabled="{x:Bind Context.BoolNot(Context.Song.IsPodcast),Mode=OneWay}" x:Name="LrcBtn" Style="{ThemeResource RevealRoundButton}" 
                        Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" 
                        ToolTipService.ToolTip="Lyric Window" Command="{x:Bind Context.ShowLyricWindowCommand}"
                        Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEA4B;"/>
                    </Button.Content>
                </Button>
                <Button x:Uid="SmallWindow" x:Name="SmallWindow" Style="{ThemeResource RevealRoundButton}" 
                        Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" 
                        Command="{x:Bind Context.EnterCompactOverlayCommand}" ToolTipService.ToolTip="Small Window"
                                Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE2B4;" />
                    </Button.Content>
                </Button>
                <Button x:Uid="SpeedBtn" Visibility="{x:Bind Context.Song.IsPodcast,Mode=OneWay}" x:Name="SpeedBtn" Style="{ThemeResource RevealRoundButton}" 
                        Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" 
                        ToolTipService.ToolTip="Playback Rate" Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <TextBlock Style="{ThemeResource BodyTextBlockStyle}"><Run Text="{x:Bind Context.PlaybackRateToString(Context.PlaybackRate),Mode=OneWay}"/></TextBlock>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout FlyoutPresenterStyle="{ThemeResource HoriNoScrollFlyoutPresenter}">
                            <StackPanel Padding="4,4,4,-4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Orientation="Horizontal">
                                <Slider Style="{ThemeResource RoundSlider}" 
                                        IsThumbToolTipEnabled="False" MinWidth="240" 
                                        BorderBrush="{ThemeResource SystemControlAltTranslucentAcrylicWindowBrush}"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                        Minimum="0.25" Maximum="2.5" StepFrequency="0.25" 
                                        Value="{x:Bind Context.PlaybackRate, Mode=TwoWay}"/>
                                <TextBlock Margin="0,0,0,10" Width="60" TextAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource TitleTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="None" MaxLines="1" HorizontalAlignment="Stretch" Text="{x:Bind Context.PlaybackRateToString(Context.PlaybackRate), Mode=OneWay}"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button x:Uid="More" AccessKey="." x:Name="More" Style="{ThemeResource RevealRoundButton}" Foreground="{x:Bind Context.AdjustColorbyTheme(Context.CurrentColorBrush),Mode=OneWay}" ToolTipService.ToolTip="More"
                        Width="48" Height="48" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                    <Button.Content>
                        <SymbolIcon Symbol="More"/>
                    </Button.Content>
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5" />
                    </Button.KeyboardAccelerators>
                    <Button.Flyout>
                        <MenuFlyout x:Name="MoreMenu">
                            <MenuFlyout.Items>
                                <MenuFlyoutItem Visibility="{x:Bind Context.BoolNottoVisibility(Context.Song.IsPodcast),Mode=OneWay}" Click="OpenAlbumViewDialog" Text="{x:Bind Context.Song.Album, Mode=OneWay}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE93C;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem x:Uid="Equalizer" IsEnabled="{x:Bind Context.IsEqualizerEnabled}" Command="{x:Bind Context.ShowEqualizerCommand}" Text="Equalizer">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8F9;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Limiter" IsEnabled="{x:Bind Context.IsLimiterEnabled}" Command="{x:Bind Context.ShowLimiterCommand}" Text="Limiter">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8F9;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Timer" Command="{x:Bind Context.ShowSleepTimerCommand}" Text="Sleep Timer">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE916;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Share" Click="Share_Click" Text="Share">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE72D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="Cast" Click="Cast_Click" Text="Cast">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE969;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem IsEnabled="{x:Bind Context.BoolNot(Context.Song.IsPodcast),Mode=OneWay}" x:Uid="LyricWindowFlyout" x:Name="NarrowLrcBtn" Text="Lyric Window" Command="{x:Bind Context.ShowLyricWindowCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEA4B;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="SmallWindowFlyout" x:Name="NarrowSmallWindow" Text="Small Window" Command="{x:Bind Context.EnterCompactOverlayCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE2B4;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="VisualizationFlyout" x:Name="VisualizationMenu" Text="Audio Visualization" Command="{x:Bind Context.ToggleVisualizing}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE9D9;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <ToggleMenuFlyoutItem x:Uid="ShuffleFlyout" x:Name="ShuffleFlyout" Text="Shuffle" IsChecked="{x:Bind Context.IsShuffleBool, Mode=TwoWay}">
                                    <ToggleMenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Shuffle"/>
                                    </ToggleMenuFlyoutItem.Icon>
                                </ToggleMenuFlyoutItem>
                                <ToggleMenuFlyoutItem x:Uid="RepeatFlyout" x:Name="RepeatFlyout" Text="Repeat" IsChecked="{x:Bind Context.IsLoopBool, Mode=TwoWay}">
                                    <ToggleMenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Refresh"/>
                                    </ToggleMenuFlyoutItem.Icon>
                                </ToggleMenuFlyoutItem>
                                <MenuFlyoutSeparator x:Name="NarrowSplit"/>
                                <MenuFlyoutItem IsEnabled="{x:Bind Context.BoolNot(Context.Song.IsPodcast),Mode=OneWay}" Click="DownloadOrModify" Text="{x:Bind Context.DownloadOrModify(Context.Song.IsOnline),Mode=OneWay}" >
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind Context.DownloadOrModifyIcon(Context.Song.IsOnline),Mode=OneWay}" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="OpenExplorer" Click="FindFileClick" Visibility="{x:Bind Context.BoolNottoVisibility(Context.Song.IsOnline),Mode=OneWay}" Text="Open in Explorer">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC50;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSubItem x:Uid="Delete" Foreground="#E81123" Visibility="{x:Bind Context.BoolNottoVisibility(Context.Song.IsOnline),Mode=OneWay}" Text="Delete">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE107;" />
                                    </MenuFlyoutSubItem.Icon>
                                    <MenuFlyoutItem x:Uid="DeleteTrash" Text="Move to Trash" Click="Delete_Click">

                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem x:Uid="DeletePerm" Text="Permanent Delete" Click="Delete_Click_1">

                                    </MenuFlyoutItem>
                                </MenuFlyoutSubItem>
                                <MenuFlyoutItem Visibility="Collapsed" Text="Q &amp; A">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE11B;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout.Items>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
