<!--
    Copyright (c) Aurora Studio. All rights reserved.
    
    Licensed under the MIT License. See LICENSE in the project root for license information.
-->
<Page
    x:Class="Aurora.Music.Pages.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:list="using:Aurora.Music.Controls.ListItems"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:vm="using:Aurora.Music.ViewModels"
    SizeChanged="Page_SizeChanged"
    Unloaded="Page_Unloaded"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:HomePageViewModel x:Name="Context" />
    </Page.DataContext>

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition />
            <EntranceThemeTransition />
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light" Source="../Themes/Light.xaml" />
                <ResourceDictionary x:Key="Dark" Source="../Themes/Dark.xaml" />
            </ResourceDictionary.ThemeDictionaries>
            <Style x:Key="HeroGridViewStyle" TargetType="GridView">
                <Setter Property="Padding" Value="0,0,0,10" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="TabNavigation" Value="Once" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
                <Setter Property="IsSwipeEnabled" Value="True" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="-2" />
                <Setter Property="ItemContainerTransitions">
                    <Setter.Value>
                        <TransitionCollection>
                            <AddDeleteThemeTransition />
                            <ContentThemeTransition />
                            <ReorderThemeTransition />
                            <EntranceThemeTransition IsStaggeringEnabled="True" />
                        </TransitionCollection>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridView">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer
                                    x:Name="ScrollViewer"
                                    AutomationProperties.AccessibilityView="Raw"
                                    BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                    IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                    IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                    IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                    TabNavigation="{TemplateBinding TabNavigation}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                    ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                    <ItemsPresenter
                                        Padding="{TemplateBinding Padding}"
                                        Footer="{TemplateBinding Footer}"
                                        FooterTemplate="{TemplateBinding FooterTemplate}"
                                        FooterTransitions="{TemplateBinding FooterTransitions}"
                                        Header="{TemplateBinding Header}"
                                        HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                        HeaderTransitions="{TemplateBinding HeaderTransitions}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HomeListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="TabNavigation" Value="Local" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="FocusVisualMargin" Value="0" />
                <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
                <Setter Property="FocusVisualPrimaryThickness" Value="2" />
                <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
                <Setter Property="FocusVisualSecondaryThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter
                                x:Name="Root"
                                Margin="0,0,16,0"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                CheckMode="{ThemeResource ListViewItemCheckMode}"
                                ContentMargin="{TemplateBinding Padding}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Control.IsTemplateFocusTarget="True"
                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                DragBackground="{ThemeResource ListViewItemDragBackground}"
                                DragForeground="{ThemeResource ListViewItemDragForeground}"
                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                                FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                                FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                                FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                PointerOverBackground="{ThemeResource SystemControlBackgroundAltMediumLowBrush}"
                                PointerOverForeground="{ThemeResource AccentForText}"
                                PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                RevealBorderBrush="{ThemeResource SystemControlBackgroundTransparentRevealBorderBrush}"
                                RevealBorderThickness="1"
                                SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                                SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                                SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                                SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="Adaptive">
                                        <VisualState x:Name="Wide">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="1008" />
                                            </VisualState.StateTriggers>
                                        </VisualState>
                                        <VisualState x:Name="Medium">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="641" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="Root.Margin" Value="0,0,12,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Narrow">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="Root.Margin" Value="0,0,8,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HeroGridViewItem" TargetType="GridViewItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewItem">
                            <ListViewItemPresenter
                                x:Name="Root"
                                Margin="12"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}"
                                CheckBrush="{ThemeResource GridViewItemCheckBrush}"
                                CheckMode="{ThemeResource GridViewItemCheckMode}"
                                ContentMargin="0"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Control.IsTemplateFocusTarget="True"
                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                DragBackground="{ThemeResource GridViewItemDragBackground}"
                                DragForeground="{ThemeResource GridViewItemDragForeground}"
                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                                FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}"
                                FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                                FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                                FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                                FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                                PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}"
                                PointerOverBackground="{x:Null}"
                                PointerOverForeground="{ThemeResource GridViewItemForegroundPointerOver}"
                                PressedBackground="{x:Null}"
                                ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                                RevealBackground="{ThemeResource GridViewItemRevealBackground}"
                                RevealBackgroundShowsAboveContent="True"
                                RevealBorderBrush="{ThemeResource SystemControlTransparentRevealBorderBrush}"
                                RevealBorderThickness="0"
                                SelectedBackground="{x:Null}"
                                SelectedForeground="{ThemeResource GridViewItemForegroundSelected}"
                                SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                                SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}"
                                SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="Adaptive">
                                        <VisualState x:Name="Wide">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="1008" />
                                            </VisualState.StateTriggers>
                                        </VisualState>
                                        <VisualState x:Name="Medium">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="641" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="Root.Margin" Value="8" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Narrow">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="Root.Margin" Value="4" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid
        x:Name="Main"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <ScrollViewer
            x:Name="MainScroller"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ui:ScrollViewerExtensions.VerticalScrollBarMargin="0,120,0,0"
            HorizontalScrollBarVisibility="Hidden"
            HorizontalScrollMode="Auto"
            IsHorizontalRailEnabled="False"
            IsHorizontalScrollChainingEnabled="False"
            IsVerticalRailEnabled="True"
            IsVerticalScrollChainingEnabled="True"
            VerticalScrollBarVisibility="Auto"
            VerticalScrollMode="Auto">
            <StackPanel
                x:Name="ContentPanel"
                Margin="0,240,0,16"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Orientation="Vertical">
                <ListView
                    x:Name="HeroGrid"
                    Margin="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ContextCanceled="HeroGrid_ContextCanceled"
                    ContextRequested="HeroGrid_ContextRequested"
                    IsItemClickEnabled="True"
                    ItemClick="HeroGrid_ItemClick"
                    ItemContainerStyle="{ThemeResource HomeListViewItemStyle}"
                    ItemsSource="{x:Bind Context.HeroList}"
                    ScrollViewer.IsHorizontalScrollChainingEnabled="True"
                    ScrollViewer.IsVerticalScrollChainingEnabled="True"
                    SelectionMode="None"
                    Style="{ThemeResource HorizontalListView}">
                    <ListView.Header>
                        <Grid
                            x:Name="HeroHeader"
                            Width="32"
                            VerticalAlignment="Stretch" />
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:HeroItemViewModel">
                            <list:HeroItem Data="{x:Bind}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel
                    x:Name="OnlinePanel"
                    Margin="16,16,16,8"
                    Orientation="Horizontal"
                    Visibility="{x:Bind Context.CollapseIfZero(Context.OnlineList.Count), Mode=OneWay, FallbackValue=Collapsed}">
                    <TextBlock
                        x:Uid="TopPlaylist"
                        FontWeight="Bold"
                        Style="{ThemeResource TitleTextBlockStyle}" />
                    <ToggleSwitch
                        Margin="12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Loaded="ToggleSwitch_Loaded"
                        OffContent=""
                        OnContent="" />
                </StackPanel>
                <GridView
                    x:Name="OnlineList"
                    Margin="0,8"
                    Padding="16,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    animations:ItemsReorderAnimation.Duration="360"
                    IsItemClickEnabled="True"
                    IsSynchronizedWithCurrentItem="False"
                    ItemClick="OnlineList_ItemClick"
                    ItemContainerStyle="{ThemeResource GridViewItemRevealBackgroundShowsAboveContentStyle}"
                    ItemsSource="{x:Bind Context.OnlineList}"
                    ScrollViewer.IsHorizontalRailEnabled="True"
                    ScrollViewer.IsHorizontalScrollChainingEnabled="True"
                    ScrollViewer.IsVerticalScrollChainingEnabled="True"
                    SelectionMode="None"
                    Visibility="{x:Bind Context.CollapseIfZero(Context.OnlineList.Count), Mode=OneWay, FallbackValue=Collapsed}">
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="vm:GenericMusicItemViewModel">
                            <list:HomeItem Data="{x:Bind}" />
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
                <StackPanel
                    x:Name="FavoritPanel"
                    Margin="60,16,16,8"
                    Orientation="Horizontal">
                    <TextBlock
                        x:Name="FavoritTitle"
                        x:Uid="Favorite"
                        FontWeight="Bold"
                        Style="{ThemeResource TitleTextBlockStyle}"
                        Text="Your Favorite" />
                    <Button
                        Margin="8,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{x:Bind Context.PlayFavCommand}"
                        Style="{ThemeResource PlayAllButton}"
                        Visibility="{x:Bind Context.CollapseIfZero(Context.FavList.Count), Mode=OneWay, FallbackValue=Collapsed}" />
                </StackPanel>
                <ListView
                    x:Name="FavList"
                    Margin="0,8"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ContextCanceled="HeroGrid_ContextCanceled"
                    ContextRequested="HeroGrid_ContextRequested"
                    IsItemClickEnabled="True"
                    IsSynchronizedWithCurrentItem="False"
                    ItemClick="FavList_ItemClick"
                    ItemContainerStyle="{ThemeResource HomeListViewItemStyle}"
                    ItemsSource="{x:Bind Context.FavList}"
                    ScrollViewer.IsHorizontalRailEnabled="True"
                    ScrollViewer.IsHorizontalScrollChainingEnabled="True"
                    ScrollViewer.IsVerticalScrollChainingEnabled="True"
                    SelectionMode="None"
                    Style="{StaticResource HorizontalListView}">
                    <ListView.Header>
                        <Grid
                            x:Name="FavHeader"
                            MinWidth="60"
                            Padding="60,0,0,0"
                            VerticalAlignment="Stretch">
                            <TextBlock
                                x:Uid="StatisticsUnAvaliabe"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{ThemeResource SubtitleTextBlockStyle}"
                                Text="No enough statistics"
                                Visibility="{x:Bind Context.CollapseIfNotZero(Context.FavList.Count), Mode=OneWay, FallbackValue=Collapsed}" />
                        </Grid>
                    </ListView.Header>
                    <ListView.Footer>
                        <Grid Width="60" VerticalAlignment="Stretch" />
                    </ListView.Footer>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:GenericMusicItemViewModel">
                            <list:HomeItem Data="{x:Bind}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel
                    x:Name="RandomPanel"
                    Margin="60,16,16,8"
                    Orientation="Horizontal">
                    <TextBlock
                        x:Name="RandomTitle"
                        x:Uid="Lucky"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Style="{ThemeResource TitleTextBlockStyle}"
                        Text="Feeling Lucky" />
                    <Button
                        Margin="8,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{x:Bind Context.PlayRandomCommand}"
                        Style="{ThemeResource PlayAllButton}"
                        Visibility="{x:Bind Context.CollapseIfZero(Context.RandomList.Count), Mode=OneWay, FallbackValue=Collapsed}" />
                    <Button
                        Margin="8,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{x:Bind Context.ReRandomCommand}"
                        Style="{ThemeResource RevealRoundCornerButton}"
                        Visibility="{x:Bind Context.CollapseIfZero(Context.RandomList.Count), Mode=OneWay, FallbackValue=Collapsed}">
                        <Button.Content>
                            <TextBlock>
                                <Run
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="13"
                                    Text="&#xE895;" />
                                <Run x:Uid="RefreshPost" Text="Refresh" />
                            </TextBlock>
                        </Button.Content>
                    </Button>
                </StackPanel>
                <ListView
                    x:Name="LuckyList"
                    Margin="0,8"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ContextCanceled="HeroGrid_ContextCanceled"
                    ContextRequested="HeroGrid_ContextRequested"
                    IsItemClickEnabled="True"
                    IsSynchronizedWithCurrentItem="False"
                    ItemClick="FavList_ItemClick"
                    ItemContainerStyle="{ThemeResource HomeListViewItemStyle}"
                    ItemsSource="{x:Bind Context.RandomList}"
                    ScrollViewer.IsHorizontalRailEnabled="True"
                    ScrollViewer.IsHorizontalScrollChainingEnabled="True"
                    ScrollViewer.IsVerticalScrollChainingEnabled="True"
                    SelectionMode="None"
                    Style="{StaticResource HorizontalListView}">
                    <ListView.Header>
                        <Grid
                            x:Name="RandomHeader"
                            Width="60"
                            VerticalAlignment="Stretch" />
                    </ListView.Header>
                    <ListView.Footer>
                        <Grid Width="60" VerticalAlignment="Stretch" />
                    </ListView.Footer>

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:GenericMusicItemViewModel">
                            <list:HomeItem Data="{x:Bind}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid
                    Margin="48,128,48,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle
                        Height="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Fill="{ThemeResource SystemControlHighlightBaseLowRevealBorderBrush}"
                        Stroke="{x:Null}" />
                    <Rectangle
                        Grid.Column="2"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Fill="{ThemeResource SystemControlHighlightBaseLowRevealBorderBrush}"
                        Stroke="{x:Null}" />
                    <Button
                        Grid.Column="1"
                        Margin="12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{x:Bind Context.GotoDonation}"
                        Content="Aurora Music"
                        Style="{ThemeResource TextBlockButtonStyle}" />
                </Grid>
            </StackPanel>
        </ScrollViewer>
        <Border
            x:Name="HeaderBG"
            Height="120"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="{ThemeResource SystemControlAltHighAcrylicElementBrush}"
            Loaded="Header_Loaded" />
        <Border
            x:Name="TextContainer"
            HorizontalAlignment="Left"
            VerticalAlignment="Top">
            <TextBlock
                x:Name="HeroTitle"
                FontWeight="Bold"
                Style="{ThemeResource HeaderTextBlockStyle}"
                Text="{x:Bind Context.WelcomeTitle, Mode=OneWay}" />
        </Border>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Tablets" />
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RandomPanel.Margin" Value="16,64,8,8" />
                        <Setter Target="FavoritPanel.Margin" Value="16,64,8,8" />
                        <Setter Target="OnlinePanel.Margin" Value="16,64,8,8" />
                        <Setter Target="TextContainer.Padding" Value="16,0,0,0" />
                        <Setter Target="RandomHeader.Width" Value="16" />
                        <Setter Target="FavHeader.MinWidth" Value="16" />
                        <Setter Target="OnlineList.Padding" Value="16,0" />
                        <Setter Target="FavHeader.Padding" Value="16,0,0,0" />
                        <Setter Target="HeroHeader.Width" Value="16" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RandomPanel.Margin" Value="16,64,16,8" />
                        <Setter Target="FavoritPanel.Margin" Value="16,64,16,8" />
                        <Setter Target="OnelinePanel.Margin" Value="16,64,16,8" />
                        <Setter Target="TextContainer.Padding" Value="16,0,0,0" />
                        <Setter Target="RandomHeader.Width" Value="16" />
                        <Setter Target="OnlineList.Padding" Value="16,0" />
                        <Setter Target="FavHeader.MinWidth" Value="16" />
                        <Setter Target="FavHeader.Padding" Value="16,0,0,0" />
                        <Setter Target="HeroHeader.Width" Value="16" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RandomPanel.Margin" Value="32,64,0,8" />
                        <Setter Target="FavoritPanel.Margin" Value="32,64,0,8" />
                        <Setter Target="OnlinePanel.Margin" Value="32,64,0,8" />
                        <Setter Target="TextContainer.Padding" Value="32,0,0,0" />
                        <Setter Target="RandomHeader.Width" Value="32" />
                        <Setter Target="OnlineList.Padding" Value="32,0" />
                        <Setter Target="FavHeader.MinWidth" Value="32" />
                        <Setter Target="FavHeader.Padding" Value="32,0,0,0" />
                        <Setter Target="HeroHeader.Width" Value="32" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="Tall">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderBG.Height" Value="120" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Short">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="321" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderBG.Height" Value="80" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderBG.Height" Value="80" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
